---
- name: Ensure Readarr group exists
  ansible.builtin.group:
    name: "{{ arrs_readarr_group }}"
    gid: "{{ arrs_readarr_gid }}"
    state: present

- name: Ensure Readarr user exists
  ansible.builtin.user:
    name: "{{ arrs_readarr_user }}"
    group: "{{ arrs_readarr_group }}"
    create_home: false
    shell: /usr/sbin/nologin
    uid: "{{ arrs_readarr_uid }}"
    state: present

- name: Ensure Readarr library directory exists
  ansible.builtin.file:
    path: /var/lib/readarr
    state: directory
    owner: "{{ arrs_readarr_user }}"
    group: "{{ arrs_readarr_group }}"
    mode: "0755"

- name: Download Readarr archive
  ansible.builtin.get_url:
    url: "{{ arrs_readarr_url }}"
    dest: /root/readarr.linux-core-x64.tar.gz
    owner: root
    group: root
    mode: "0644"

- name: Ensure Readarr installation directory exists
  ansible.builtin.file:
    path: /opt/Readarr
    state: directory
    owner: "{{ arrs_readarr_user }}"
    group: "{{ arrs_readarr_group }}"
    mode: "0755"

- name: Extract Readarr to /opt/Readarr
  ansible.builtin.unarchive:
    src: /root/readarr.linux-core-x64.tar.gz
    dest: /opt
    owner: "{{ arrs_readarr_user }}"
    group: "{{ arrs_readarr_group }}"
    remote_src: true
  notify: Restart Readarr

- name: Deploy Readarr systemd service
  ansible.builtin.template:
    src: readarr.service.j2
    dest: /etc/systemd/system/readarr.service
    mode: "0664"
    owner: root
    group: root
  notify: Restart Readarr

- name: Enable and start Readarr service
  ansible.builtin.systemd:
    name: readarr
    state: started
    enabled: true
